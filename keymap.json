// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      "shift shift": "file_finder::Toggle"
    }
  },
  {
    // Escape from insert mode
    "context": "Editor && vim_mode == insert",
    "bindings": { "j k": "vim::NormalBefore" }
  },
  {
    // General
    "context": "VimControl",
    "bindings": {
      "space w": "workspace::Save",
      "space l": "tab_switcher::ToggleAll",
      "space e e": "workspace::ToggleLeftDock",
      "space e o": "workspace::ToggleRightDock",
      "space e f": "pane::RevealInProjectPanel",
      "space f f": "file_finder::Toggle",
      "space f w": "workspace::NewSearch", // Open project search
      "space f o": "outline::Toggle",
      "space f e": "editor::Rename",
      "space f s": "project_symbols::Toggle",
      "space x": "pane::CloseActiveItem",
      "space shift-x": "pane::ReopenClosedItem",
      "space s v": "pane::SplitRight",
      "space s h": "pane::SplitDown",
      "space o": "projects::OpenRecent",
      "space y": "workspace::CopyRelativePath",
      "space shift-y": "workspace::CopyPath",
      "] f": "vim::NextMethodStart",
      "] shift-f": "vim::NextMethodEnd",
      "[ f": "vim::PreviousMethodStart",
      "[ shift-f": "vim::PreviousMethodEnd",
      "] c": ["workspace::SendKeystrokes", "] c z z"],
      "[ c": ["workspace::SendKeystrokes", "[ c z z"],
      "] e": "editor::MoveToStartOfNextExcerpt",
      "[ [ e": "editor::MoveToEndOfPreviousExcerpt",
      "[ e": ["workspace::SendKeystrokes", "[ [ e cmd-up"],
      "ctrl-g": "go_to_line::Toggle",
      "space n c": "workspace::ClearAllNotifications",
      "space t": "task::Spawn",
      "space space": "editor::ShowCompletions",
      "space c s": ["task::Spawn", { "task_name": "copy symbol" }],
      "space c b": [
        "task::Spawn",
        { "task_name": "git copy current branch name" }
      ],
      // git
      "space g s": "git::Switch",
      "space g b": "git::Blame",
      "space g d": "git::Diff",
      "space g g": "git_panel::ToggleFocus",
      "space g a": "git::ToggleStaged",
      "space g r": "git::Restore",
      "space g shift-r": "git::RestoreFile",
      "space g f": ["task::Spawn", { "task_name": "git fetch" }],
      "space g p": ["task::Spawn", { "task_name": "git pull" }],
      "space g c": "git::Commit",
      "space g l l": ["task::Spawn", { "task_name": "git ll" }],
      "space g l p": ["task::Spawn", { "task_name": "git log --follow" }],
      "space g l f": ["task::Spawn", { "task_name": "git lf" }],
      "space g o": "editor::OpenGitBlameCommit"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "space": null,
      "space space": "project_panel::Open",
      "escape": "project_panel::ToggleFocus",
      "space e e": "workspace::ToggleLeftDock",
      "space e f": "workspace::ToggleLeftDock",
      "space a": "project_panel::NewFile",
      "space n": "project_panel::NewDirectory",
      "space r": "project_panel::Rename",
      "space d": "project_panel::Delete",
      "space y": "workspace::CopyRelativePath",
      "space shift-y": "workspace::CopyPath",
      "space shift-h": "project_panel::CollapseAllEntries",
      "space f": "project_panel::NewSearchInDirectory",
      "space c": "project_panel::Copy",
      "space x": "project_panel::Cut",
      "space p": "project_panel::Paste"
    }
  },
  {
    "context": "GitPanel",
    "bindings": {
      "space": null,
      "space space": "menu::Confirm",
      "space g g": "workspace::ToggleRightDock",
      "space e o": "workspace::ToggleRightDock",
      "enter": "git::ToggleStaged",
      "g space": "menu::SecondaryConfirm",
      // git
      "space g s": "git::Switch",
      "space g b": "git::Blame",
      "space g d": "git::Diff",
      "escape": "git_panel::ToggleFocus",
      "space g a": "git::ToggleStaged",
      "space g r": "git::Restore",
      "space g shift-r": "git::RestoreFile",
      "space g f": ["task::Spawn", { "task_name": "git fetch" }],
      "space g p": ["task::Spawn", { "task_name": "git pull" }],
      "space g c": "git::Commit",
      "space g l l": ["task::Spawn", { "task_name": "git lol" }],
      "space g l p": ["task::Spawn", { "task_name": "git log --follow" }],
      "space g l f": ["task::Spawn", { "task_name": "git lof" }]
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "escape escape": "terminal_panel::ToggleFocus",
      "ctrl-w space": "terminal::ToggleViMode",
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w j": "workspace::ActivatePaneDown",
      "ctrl-w v": "pane::SplitRight",
      "ctrl-w s": "pane::SplitDown",
      "ctrl-w a": "pane::CloseAllItems"
    }
  }
]
